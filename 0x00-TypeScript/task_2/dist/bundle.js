!function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=0)}([function(e,r){var t=function(){this.workFromHome=function(){return"Working from home"},this.getCoffeeBreak=function(){return"Getting a coffee break"},this.workDirectorTasks=function(){return"Getting to director tasks"}},n=function(){this.workFromHome=function(){return"Cannot work from home"},this.getCoffeeBreak=function(){return"Cannot have a break"},this.workTeacherTasks=function(){return"Getting to work"}},o=function(e){return Number(e)<500?new n:new t},u=function(e){var r=void 0;r=function(e){return void 0!==e.workDirectorTasks}(e)?e.workDirectorTasks():e.workTeacherTasks(),console.log(r)};u(o(200)),u(o(1e3))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,